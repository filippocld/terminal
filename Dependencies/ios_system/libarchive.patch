diff -Naur libarchive-54/config.h libarchive/config.h
--- libarchive-54/config.h	2012-04-17 04:07:27.000000000 +0200
+++ libarchive/config.h	2018-01-10 11:31:05.000000000 +0100
@@ -222,7 +222,7 @@
 /* #undef HAVE_LIBEXPAT */
 
 /* Define to 1 if you have the `lzma' library (-llzma). */
-#define HAVE_LIBLZMA 1
+// #define HAVE_LIBLZMA 1
 
 /* Define to 1 if you have the `lzmadec' library (-llzmadec). */
 /* #undef HAVE_LIBLZMADEC */
@@ -274,7 +274,7 @@
 /* #undef HAVE_LZMADEC_H */
 
 /* Define to 1 if you have the <lzma.h> header file. */
-#define HAVE_LZMA_H 1
+// #define HAVE_LZMA_H 1
 
 /* Define to 1 if you have the `MD5Init' function. */
 /* #undef HAVE_MD5INIT */
diff -Naur libarchive-54/libarchive/libarchive/archive_read_support_format_iso9660.c libarchive/libarchive/libarchive/archive_read_support_format_iso9660.c
--- libarchive-54/libarchive/libarchive/archive_read_support_format_iso9660.c	2012-09-21 00:45:16.000000000 +0200
+++ libarchive/libarchive/libarchive/archive_read_support_format_iso9660.c	2018-01-10 11:31:05.000000000 +0100
@@ -2678,7 +2678,7 @@
 		parent_key = heap->files[parent]->key;
 		if (file_key >= parent_key) {
 			heap->files[hole] = file;
-			return;
+			return 0; // Non-void function should return a value
 		}
 		// Move parent into hole <==> move hole up tree.
 		heap->files[hole] = heap->files[parent];
diff -Naur libarchive-54/libarchive/libarchive/archive_util.c libarchive/libarchive/libarchive/archive_util.c
--- libarchive-54/libarchive/libarchive/archive_util.c	2010-05-21 03:07:32.000000000 +0200
+++ libarchive/libarchive/libarchive/archive_util.c	2018-01-10 11:31:05.000000000 +0100
@@ -40,6 +40,7 @@
 #include "archive.h"
 #include "archive_private.h"
 #include "archive_string.h"
+#include "ios_error.h"  // remaps exit() to pthread_exit(NULL)
 
 #if ARCHIVE_VERSION_NUMBER < 3000000
 /* These disappear in libarchive 3.0 */
diff -Naur libarchive-54/libarchive/libarchive/archive_write_set_format_pax.c libarchive/libarchive/libarchive/archive_write_set_format_pax.c
--- libarchive-54/libarchive/libarchive/archive_write_set_format_pax.c	2010-05-21 03:07:32.000000000 +0200
+++ libarchive/libarchive/libarchive/archive_write_set_format_pax.c	2018-01-10 11:31:05.000000000 +0100
@@ -40,6 +40,7 @@
 #include "archive_entry.h"
 #include "archive_private.h"
 #include "archive_write_private.h"
+#include "ios_error.h"  // remaps exit() to pthread_exit(NULL)
 
 struct pax {
 	uint64_t	entry_bytes_remaining;
diff -Naur libarchive-54/libarchive/libarchive/archive_write_set_format_zip.c libarchive/libarchive/libarchive/archive_write_set_format_zip.c
--- libarchive-54/libarchive/libarchive/archive_write_set_format_zip.c	2010-05-21 03:07:32.000000000 +0200
+++ libarchive/libarchive/libarchive/archive_write_set_format_zip.c	2018-01-10 11:31:05.000000000 +0100
@@ -247,6 +247,7 @@
 	zip->len_buf = 65536;
 	zip->buf = malloc(zip->len_buf);
 	if (zip->buf == NULL) {
+        free(zip); 
 		archive_set_error(&a->archive, ENOMEM, "Can't allocate compression buffer");
 		return (ARCHIVE_FATAL);
 	}
diff -Naur libarchive-54/libarchive/libarchive/filter_fork.c libarchive/libarchive/libarchive/filter_fork.c
--- libarchive-54/libarchive/libarchive/filter_fork.c	2010-05-21 03:07:32.000000000 +0200
+++ libarchive/libarchive/libarchive/filter_fork.c	2018-01-10 11:31:05.000000000 +0100
@@ -24,6 +24,7 @@
  */
 
 #include "archive_platform.h"
+#include "ios_error.h"  // remaps exit() to pthread_exit(NULL)
 
 /* This capability is only available on POSIX systems. */
 #if defined(HAVE_PIPE) && defined(HAVE_FCNTL) && \
diff -Naur libarchive-54/libarchive/libarchive_fe/err.c libarchive/libarchive/libarchive_fe/err.c
--- libarchive-54/libarchive/libarchive_fe/err.c	2010-05-21 03:07:32.000000000 +0200
+++ libarchive/libarchive/libarchive_fe/err.c	2018-01-10 11:31:05.000000000 +0100
@@ -38,7 +38,8 @@
 #include <string.h>
 #endif
 
-#include "err.h"
+#include "lafe_err.h"   
+#include "ios_error.h"  // remaps exit() to pthread_exit(NULL)
 
 const char *lafe_progname;
 
diff -Naur libarchive-54/libarchive/libarchive_fe/err.h libarchive/libarchive/libarchive_fe/err.h
--- libarchive-54/libarchive/libarchive_fe/err.h	2010-05-21 03:07:32.000000000 +0200
+++ libarchive/libarchive/libarchive_fe/err.h	1970-01-01 01:00:00.000000000 +0100
@@ -1,41 +0,0 @@
-/*-
- * Copyright (c) 2009 Joerg Sonnenberger
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- * 1. Redistributions of source code must retain the above copyright
- *    notice, this list of conditions and the following disclaimer.
- * 2. Redistributions in binary form must reproduce the above copyright
- *    notice, this list of conditions and the following disclaimer in the
- *    documentation and/or other materials provided with the distribution.
- *
- * THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
- * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
- * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
- * IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
- * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
- * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
- * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
- */
-
-#ifndef LAFE_ERR_H
-#define LAFE_ERR_H
-
-#if defined(__GNUC__) && (__GNUC__ > 2 || \
-                          (__GNUC__ == 2 && __GNUC_MINOR__ >= 5))
-#define __LA_DEAD       __attribute__((__noreturn__))
-#else
-#define __LA_DEAD
-#endif
-
-extern const char *lafe_progname;
-
-void	lafe_warnc(int code, const char *fmt, ...);
-void	lafe_errc(int eval, int code, const char *fmt, ...) __LA_DEAD;
-
-#endif
diff -Naur libarchive-54/libarchive/libarchive_fe/lafe_err.h libarchive/libarchive/libarchive_fe/lafe_err.h
--- libarchive-54/libarchive/libarchive_fe/lafe_err.h	1970-01-01 01:00:00.000000000 +0100
+++ libarchive/libarchive/libarchive_fe/lafe_err.h	2018-01-10 11:31:05.000000000 +0100
@@ -0,0 +1,41 @@
+/*-
+ * Copyright (c) 2009 Joerg Sonnenberger
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS OR
+ * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
+ * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+ * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+ * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+ * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef LAFE_ERR_H
+#define LAFE_ERR_H
+
+#if defined(__GNUC__) && (__GNUC__ > 2 || \
+                          (__GNUC__ == 2 && __GNUC_MINOR__ >= 5))
+#define __LA_DEAD       __attribute__((__noreturn__))
+#else
+#define __LA_DEAD
+#endif
+
+extern const char *lafe_progname;
+
+void	lafe_warnc(int code, const char *fmt, ...);
+void	lafe_errc(int eval, int code, const char *fmt, ...) __LA_DEAD;
+
+#endif
diff -Naur libarchive-54/libarchive/libarchive_fe/line_reader.c libarchive/libarchive/libarchive_fe/line_reader.c
--- libarchive-54/libarchive/libarchive_fe/line_reader.c	2010-05-21 03:07:32.000000000 +0200
+++ libarchive/libarchive/libarchive_fe/line_reader.c	2018-01-10 11:31:05.000000000 +0100
@@ -32,7 +32,7 @@
 #include <stdlib.h>
 #include <string.h>
 
-#include "err.h"
+#include "lafe_err.h"
 #include "line_reader.h"
 
 #if defined(_WIN32) && !defined(__CYGWIN__) && !defined(__BORLANDC__)
diff -Naur libarchive-54/libarchive/libarchive_fe/matching.c libarchive/libarchive/libarchive_fe/matching.c
--- libarchive-54/libarchive/libarchive_fe/matching.c	2010-05-21 03:07:32.000000000 +0200
+++ libarchive/libarchive/libarchive_fe/matching.c	2018-01-10 11:31:05.000000000 +0100
@@ -36,7 +36,7 @@
 #include <string.h>
 #endif
 
-#include "err.h"
+#include "lafe_err.h"
 #include "line_reader.h"
 #include "matching.h"
 #include "pathmatch.h"
diff -Naur libarchive-54/libarchive/tar/bsdtar.c libarchive/libarchive/tar/bsdtar.c
--- libarchive-54/libarchive/tar/bsdtar.c	2015-08-20 00:50:01.000000000 +0200
+++ libarchive/libarchive/tar/bsdtar.c	2018-01-10 11:31:05.000000000 +0100
@@ -70,7 +70,8 @@
 #include <copyfile.h>
 
 #include "bsdtar.h"
-#include "err.h"
+#include "lafe_err.h"
+#include "ios_error.h"
 
 #ifdef __MINGW32__
 int _CRT_glob = 0; /* Disable broken CRT globbing. */
@@ -118,7 +119,7 @@
 	 | ARCHIVE_EXTRACT_SECURE_NODOTDOT)
 
 int
-main(int argc, char **argv)
+tar_main(int argc, char **argv)
 {
 	struct bsdtar		*bsdtar, bsdtar_storage;
 	int			 opt, t;
@@ -135,6 +136,11 @@
 	memset(bsdtar, 0, sizeof(*bsdtar));
 	bsdtar->fd = -1; /* Mark as "unused" */
 	option_o = 0;
+    // init all flags:
+    opt = 0;
+    possible_help_request = 0;
+    t = 0;
+    bsdtar_getopt(NULL); // init parsing too
 
 #if defined(HAVE_SIGACTION) && (defined(SIGINFO) || defined(SIGUSR1))
 	{ /* Catch SIGINFO and SIGUSR1, if they exist. */
diff -Naur libarchive-54/libarchive/tar/cmdline.c libarchive/libarchive/tar/cmdline.c
--- libarchive-54/libarchive/tar/cmdline.c	2010-05-21 03:07:32.000000000 +0200
+++ libarchive/libarchive/tar/cmdline.c	2018-01-10 11:31:05.000000000 +0100
@@ -41,7 +41,7 @@
 #endif
 
 #include "bsdtar.h"
-#include "err.h"
+#include "lafe_err.h"
 
 /*
  * Short options for tar.  Please keep this sorted.
@@ -58,7 +58,7 @@
  * a small change to the code below.
  */
 
-static struct option {
+static struct tar_option {
 	const char *name;
 	int required;      /* 1 if this option requires an argument. */
 	int equivalent;    /* Equivalent short option. */
@@ -180,7 +180,12 @@
 	static int state = state_start;
 	static char *opt_word;
 
-	const struct option *popt, *match = NULL, *match2 = NULL;
+    if (bsdtar == NULL) {
+        state = state_start;
+        return 0;
+    }
+    
+ 	const struct tar_option *popt, *match = NULL, *match2 = NULL;
 	const char *p, *long_prefix = "--";
 	size_t optlength;
 	int opt = '?';
diff -Naur libarchive-54/libarchive/tar/getdate.c libarchive/libarchive/tar/getdate.c
--- libarchive-54/libarchive/tar/getdate.c	2010-05-21 03:07:32.000000000 +0200
+++ libarchive/libarchive/tar/getdate.c	2018-01-10 11:31:05.000000000 +0100
@@ -37,6 +37,7 @@
 #include <stdlib.h>
 #include <string.h>
 #include <time.h>
+#include "ios_error.h"  // remaps exit() to pthread_exit(NULL)
 
 /* This file defines a single public function. */
 time_t get_date(time_t now, char *);
diff -Naur libarchive-54/libarchive/tar/read.c libarchive/libarchive/tar/read.c
--- libarchive-54/libarchive/tar/read.c	2016-08-27 00:40:00.000000000 +0200
+++ libarchive/libarchive/tar/read.c	2018-01-10 11:31:05.000000000 +0100
@@ -79,7 +79,7 @@
 #endif /* HAVE_QUARANTINE */
 
 #include "bsdtar.h"
-#include "err.h"
+#include "lafe_err.h"
 
 struct progress_data {
 	struct bsdtar *bsdtar;
diff -Naur libarchive-54/libarchive/tar/subst.c libarchive/libarchive/tar/subst.c
--- libarchive-54/libarchive/tar/subst.c	2010-05-21 03:07:32.000000000 +0200
+++ libarchive/libarchive/tar/subst.c	2018-01-10 11:31:05.000000000 +0100
@@ -38,7 +38,7 @@
 #define	REG_BASIC 0
 #endif
 
-#include "err.h"
+#include "lafe_err.h"
 
 struct subst_rule {
 	struct subst_rule *next;
diff -Naur libarchive-54/libarchive/tar/util.c libarchive/libarchive/tar/util.c
--- libarchive-54/libarchive/tar/util.c	2016-11-15 22:44:15.000000000 +0100
+++ libarchive/libarchive/tar/util.c	2018-01-10 11:31:05.000000000 +0100
@@ -60,7 +60,7 @@
 #endif
 
 #include "bsdtar.h"
-#include "err.h"
+#include "lafe_err.h"
 
 static size_t	bsdtar_expand_char(char *, size_t, char);
 static const char *strip_components(const char *path, int elements);
diff -Naur libarchive-54/libarchive/tar/write.c libarchive/libarchive/tar/write.c
--- libarchive-54/libarchive/tar/write.c	2010-05-21 03:07:32.000000000 +0200
+++ libarchive/libarchive/tar/write.c	2018-01-10 11:31:05.000000000 +0100
@@ -88,9 +88,10 @@
 #include <libgen.h>
 #include <paths.h>
 #endif
+#include "ios_error.h"  // remaps exit() to pthread_exit(NULL)
 
 #include "bsdtar.h"
-#include "err.h"
+#include "lafe_err.h"
 #include "line_reader.h"
 #include "tree.h"
 
